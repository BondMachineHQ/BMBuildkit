"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[299],{2965:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>n,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=t(5893),l=t(1151);const r={sidebar_position:1},n="Quickstart",s={id:"tutorial-basics/quickstart",title:"Quickstart",description:"The following is a quick example on how to get started with a demo Lattice ice40 stick FPGA and a blinky led algorithm.",source:"@site/docs/tutorial-basics/quickstart.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/quickstart",permalink:"/BMBuildkit/docs/tutorial-basics/quickstart",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Basics",permalink:"/BMBuildkit/docs/category/tutorial---basics"}},o={},c=[{value:"Install bmctl CLI",id:"install-bmctl-cli",level:2},{value:"Build, tag and share your FPGA algorithms",id:"build-tag-and-share-your-fpga-algorithms",level:2},{value:"(alternative) Upload a pre-built firmware",id:"alternative-upload-a-pre-built-firmware",level:2},{value:"Upload demo alveo u50 firmware",id:"upload-demo-alveo-u50-firmware",level:3},{value:"Load the firmware on the board",id:"load-the-firmware-on-the-board",level:2},{value:"Alveo u50 load firmware",id:"alveo-u50-load-firmware",level:3},{value:"Quick build with ice40 docker",id:"quick-build-with-ice40-docker",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.h1,{id:"quickstart",children:"Quickstart"}),"\n",(0,a.jsx)(i.p,{children:"The following is a quick example on how to get started with a demo Lattice ice40 stick FPGA and a blinky led algorithm."}),"\n",(0,a.jsx)(i.h2,{id:"install-bmctl-cli",children:"Install bmctl CLI"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"git clone https://github.com/BondMachineHQ/BMBuildkit\ncd BMBuildkit \ngo install ./cmd/bmctl\n"})}),"\n",(0,a.jsx)(i.h2,{id:"build-tag-and-share-your-fpga-algorithms",children:"Build, tag and share your FPGA algorithms"}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"N.B."})," you need an host\nwith ",(0,a.jsx)(i.a,{href:"https://github.com/YosysHQ/icestorm",children:"icepack"}),", ",(0,a.jsx)(i.a,{href:"https://github.com/YosysHQ/nextpnr",children:"nextpnr"}),"\nand ",(0,a.jsx)(i.a,{href:"https://github.com/YosysHQ/yosys",children:"yosys"})," installed on your host. In alternative you can try with the pre-built\nsteps below."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"bmctl build ./ -f BMFile -t <dockerhub USERNAME>/bmtest:built\n"})}),"\n",(0,a.jsx)(i.h2,{id:"alternative-upload-a-pre-built-firmware",children:"(alternative) Upload a pre-built firmware"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"bmctl build ./ -f BMFile.localfirmware -t <dockerhub USERNAME>/bmtest:pre-built\n"})}),"\n",(0,a.jsx)(i.h3,{id:"upload-demo-alveo-u50-firmware",children:"Upload demo alveo u50 firmware"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"wget http://bondmachine.fisica.unipg.it/firmwares/bmfloat16.xclbin\n\nbmctl build ./ -f BMFile.localfirmware-alveo -t <dockerhub USERNAME>/bmtest-alveo:pre-built\n"})}),"\n",(0,a.jsx)(i.h2,{id:"load-the-firmware-on-the-board",children:"Load the firmware on the board"}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"N.B."})," you need an host with ",(0,a.jsx)(i.a,{href:"https://github.com/YosysHQ/icestorm",children:"iceprog"})," installed."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"bmctl load <dockerhub USERNAME>/bmtest:pre-built xilinx/alveou50/xrt\n"})}),"\n",(0,a.jsx)(i.h3,{id:"alveo-u50-load-firmware",children:"Alveo u50 load firmware"}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"N.B."})," you need ",(0,a.jsx)(i.a,{href:"https://github.com/Xilinx/Xilinx_Base_Runtime",children:"Xilinx runtime"})," installed and sourced for this to run."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"bmctl load  <dockerhub USERNAME>/bmtest-alveo:pre-built lattice/ice40/yosys\n"})}),"\n",(0,a.jsx)(i.h2,{id:"quick-build-with-ice40-docker",children:"Quick build with ice40 docker"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"docker run -e MODULE_NAME=blinky -e SYNTH_FILE=blinky.v -v $PWD/examples/blinky:/opt/source -ti dciangot/yosys bash\n"})})]})}function u(e={}){const{wrapper:i}={...(0,l.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>s,a:()=>n});var a=t(7294);const l={},r=a.createContext(l);function n(e){const i=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),a.createElement(r.Provider,{value:i},e.children)}}}]);